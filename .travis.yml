sudo: required
language: python
dist: buster
python: "3.7"

install:
  - set -o allexport
  - source .env
  - set +o allexport
  - pip install poetry
  - poetry install

script:
  - poetry run pytest

# Note: Deployment refers to multiple environment variables, both public and private.
# Public values should be set in the .env file in the repository.
#
# Public variables are:
# * GITHUB_REPO
# * DOCKER_REPO
#
# Private values such as passwords should not be added to the source code.
# They can be set using the Travis web client.
#
# To set these, edit your repository settings in https://travis-ci.org/,
# and add them as environment variables.
# By default, any occurrence of the variable is censored in the build log.
#
# Private variables are:
# * DOCKER_USER
# * DOCKER_PASSWORD
# * PYPI_USER
# * PYPI_PASSWORD

before_deploy:
  - curl -fsSL https://get.docker.com | sh
  - echo '{"experimental":"enabled"}' | sudo tee /etc/docker/daemon.json
  - mkdir -p $HOME/.docker
  - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
  - sudo service docker start
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use
  - docker buildx inspect --bootstrap
  - echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USER} --password-stdin
  - cd docker
  - bash ./before_build.sh
  - cd ${TRAVIS_BUILD_DIR}

deploy:
  # Deploy "latest" and version tag to Docker Hub on tagged commits
  - provider: script
    script:
    - TAG=$(echo $TRAVIS_BRANCH | tr '/' '-' | tr '[:upper:]' '[:lower:]')
    - |
      docker buildx build
      --tag ${DOCKER_REPO}:${TAG}
      --tag ${DOCKER_REPO}:rpi-${TAG}
      --build-arg service_info="$(git describe) @ $(date)"
      --push
      --platform linux/amd64,linux/arm/v7
      docker;
    skip_cleanup: true
    on:
      repo: ${GITHUB_REPO}
      all_branches: true

  # Deploy to PyPi any time the package version number is updated
  - provider: pypi
    user: ${PYPI_USER}
    password: ${PYPI_PASSWORD}
    skip_existing: true
    skip_cleanup: true
    on:
      repo: ${GITHUB_REPO}
      all_branches: true
